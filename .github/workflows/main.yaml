name: Deploy

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Node
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Dependencies
        run: npm install

      - name: Syntax Test
        run: npm run check

      - name: Execution Test
        run: npm run exec_test

      # Docker
      - name: Docker Build
        run: |
          docker build -t pyxler-api:latest .
          docker save -o pyxler-api.tar pyxler-api:latest

      - name: Docker Upload
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          scp -o StrictHostKeyChecking=no pyxler-api.tar ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:~

      - name: Docker Load
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} << 'ENDSSH'
          docker load -i ~/pyxler-api.tar
          docker service update --force --detach --env-add "GITHUB_HEADREF=${{ github.head_ref }}" --env-add "GITHUB_SHA=${{ github.sha }}" pyxler_pyxler-api
          ENDSSH

      # AWS
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Compress
        run: zip -r -q archive.zip ./*.mjs ./*.json ./node_modules

      - name: Deploy
        run: aws lambda update-function-code --function-name=function1 --zip-file=fileb://./archive.zip
